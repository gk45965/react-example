{"ast":null,"code":"var _jsxFileName = \"/home/incs_11/Desktop/java/react/my-ecommerce/src/component/UserUpdateComponent.jsx\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport UserService from \"../service/UserService\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nclass UserUpdateComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.retriverUser = this.retriverUser.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.state = {\n      id: this.props.match.params.id,\n      firstName: '',\n      lastName: '',\n      phoneNo: '',\n      email: '',\n      password: 'hello2'\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.id == -1) return;\n    this.retriverUser(this.state.id);\n  }\n\n  retriverUser(id) {\n    return UserService.retrieveUser(id).then(response => {\n      this.setState({\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        phoneNo: response.data.phoneNo,\n        email: response.data.email\n      });\n    });\n  }\n\n  onSubmit(values) {\n    let payload = {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      phoneNo: values.phoneNo,\n      email: values.email,\n      password: values.password\n    };\n    console.log(payload);\n    console.log(\"Form submitted Successfuly\");\n    if (values.id == -1) UserService.createCourse(payload).then(() => {\n      this.props.history.push(`/users`);\n    });else UserService.updateById(values.id, payload).then(() => {\n      this.props.history.push(`/users`);\n    }); //  this.props.history.push(`/users` );\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.firstName) {\n      errors.firstName = \"Enter the firstName\";\n    }\n\n    if (!values.lastName) {\n      errors.firstName = \"Enter the lastName\";\n    }\n\n    if (!values.phoneNo) {\n      errors.phoneNo = \"Enter the phoneNo\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Enter the email\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    let {\n      firstName,\n      lastName,\n      phoneNo,\n      email,\n      id,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \" User \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        id,\n        firstName,\n        lastName,\n        phoneNo,\n        email,\n        password\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"firstName\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"lastName\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"phoneNo\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }, \"Phone No\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"phoneNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 2\n      }\n    }, \"Save\"))))));\n  }\n\n} //     render()\n//     {\n//         let { firstName , lastName , phoneNo , email } = this.state ;\n//        return(\n//            <div className=\"container\">\n//                 <table>\n//                 <thead>\n//                     <tr>\n//                     <th>First Name</th>\n// <th>Last Name</th>\n// <th>Phone No</th>\n// <th>Email</th>\n//                         </tr>                    \n//                 </thead>\n//             <tbody>\n//             <tr>\n//        {/* <td>{this.state.firstName}</td>\n// <td>{this.state.lastName}</td>\n// <td>{this.state.phoneNo}</td>\n// <td>{this.state.email}</td> */}\n//               <td>{firstName}</td>\n// <td>{lastName}</td>\n// <td>{phoneNo}</td>\n// <td>{email}</td>\n//                         </tr>                    \n//             </tbody>\n//                 </table>\n//            </div>\n//        )     \n//     }\n// }\n\n\nexport default UserUpdateComponent;","map":{"version":3,"sources":["/home/incs_11/Desktop/java/react/my-ecommerce/src/component/UserUpdateComponent.jsx"],"names":["Component","React","UserService","Formik","Form","Field","ErrorMessage","UserUpdateComponent","constructor","props","retriverUser","bind","onSubmit","validate","state","id","match","params","firstName","lastName","phoneNo","email","password","componentDidMount","retrieveUser","then","response","setState","data","values","payload","console","log","createCourse","history","push","updateById","errors","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport React from 'react' ;\nimport UserService from \"../service/UserService\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\n\nclass UserUpdateComponent extends Component\n{\n\n    constructor(props)\n    {\n        super(props)\n        this.retriverUser = this.retriverUser.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n        this.state = {\n            id : this.props.match.params.id ,\n            firstName : '' ,\n            lastName : '' ,\n            phoneNo : '' ,\n            email : '' ,\n            password : 'hello2' \n        }\n    }\n    \n  \n\ncomponentDidMount()\n{\n\n    if(this.state.id == -1)\n        return\n\n    this.retriverUser(this.state.id);\n}\n\nretriverUser(id)\n{\n    return UserService.retrieveUser(id).then(\n        response => {\n            this.setState( {\n                firstName :  response.data.firstName ,\n                lastName : response.data.lastName ,\n                phoneNo : response.data.phoneNo ,\n                email : response.data.email \n                \n            } )\n        }\n\n    )\n\n}\n\nonSubmit(values)\n{\n    let payload = { firstName : values.firstName , lastName :  values.lastName , phoneNo : values.phoneNo , email : values.email , password :  values.password} ;\n\nconsole.log(payload);\nconsole.log(\"Form submitted Successfuly\");\n\n\nif(values.id == -1 )\nUserService.createCourse(payload).then( () => {this.props.history.push(`/users` )});\nelse\nUserService.updateById(values.id,payload).then( () => {this.props.history.push(`/users` )});\n\n//  this.props.history.push(`/users` );\n\n}\n\n\n\nvalidate(values)\n{\nlet errors = {} \nif(!values.firstName)\n{\nerrors.firstName = \"Enter the firstName\" \n}\nif(!values.lastName)\n{\n    errors.firstName = \"Enter the lastName\" \n}\nif(!values.phoneNo)\n{\nerrors.phoneNo = \"Enter the phoneNo\" \n}\nif(!values.email)\n{\nerrors.email = \"Enter the email\"\n}\n\nreturn errors;\n}\n\n\n\nrender()\n{\n    let { firstName , lastName , phoneNo , email , id  , password  } = this.state ;\n\n    return(\n        <div>\n            <div>\n                <h3> User </h3>\n                <div className = \"container\" > \n\n                <Formik\n                    initialValues={{ id , firstName , lastName , phoneNo , email , password}}\n                    onSubmit={this.onSubmit}  \n                    validateOnChange={false}\n                    validateOnBlur={false}\n                    validate={this.validate}\n                    enableReinitialize={true}\n                >\n                    {\n                        (props) => (\n                            <Form>\n                                <ErrorMessage name=\"firstName\"  component=\"div\" className=\"alert alert-warning\" />\n                                <ErrorMessage name=\"lastName\"  component=\"div\" className=\"alert alert-warning\" />\n                                <ErrorMessage name=\"phoneNo\"  component=\"div\" className=\"alert alert-warning\" />\n                                <ErrorMessage name=\"email\"  component=\"div\" className=\"alert alert-warning\" />\n                                   <fieldset className=\"form-group\">\n                                            <label>Id</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"id\" disabled />\n                                            \n                                    </fieldset>\n\n                                    <fieldset className=\"form-group\" >\n                                            <label>First Name</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"firstName\"  /> \n                                    </fieldset>\n                                    <fieldset className=\"form-group\" >\n                                            <label>Last Name</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"lastName\"/> \n                                    </fieldset>\n                                    <fieldset className=\"form-group\" >\n                                            <label>Phone No</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"phoneNo\" />  \n                                    </fieldset>\n                                    <fieldset className=\"form-group\" >\n                                            <label>Email</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"email\"  /> \n                                    </fieldset>                                 \n                \n <button className=\"btn btn-success\" type=\"submit\">Save</button>\n\n                            </Form>\n                        )   \n                    }   \n                </Formik>\n\n\n\n\n\n\n                {/* <Formik\n                    initialValues={{ id }}\n                >\n                    {\n                        (props) => (\n                            <Form>\n                                <fieldset className=\"form-group\">\n                                    <label>Id</label>\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <label>Email</label>\n                                    <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                </fieldset>\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                            </Form>\n                        )\n                    }\n                </Formik>               */}\n                </div>\n            </div>\n\n        </div>\n    )\n\n\n}\n\n\n}\n\n\n\n\n\n\n\n//     render()\n//     {\n\n//         let { firstName , lastName , phoneNo , email } = this.state ;\n\n//        return(\n//            <div className=\"container\">\n                \n\n//                 <table>\n//                 <thead>\n//                     <tr>\n//                     <th>First Name</th>\n// <th>Last Name</th>\n// <th>Phone No</th>\n// <th>Email</th>\n//                         </tr>                    \n\n\n//                 </thead>\n\n//             <tbody>\n\n//             <tr>\n\n\n\n//        {/* <td>{this.state.firstName}</td>\n// <td>{this.state.lastName}</td>\n// <td>{this.state.phoneNo}</td>\n// <td>{this.state.email}</td> */}\n              \n//               <td>{firstName}</td>\n// <td>{lastName}</td>\n// <td>{phoneNo}</td>\n// <td>{email}</td>\n\n\n\n//                         </tr>                    \n\n\n\n//             </tbody>\n//                 </table>\n\n\n\n//            </div>\n//        )     \n\n//     }\n\n\n// }\n\nexport default UserUpdateComponent ;"]},"metadata":{},"sourceType":"module"}