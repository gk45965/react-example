{"ast":null,"code":"var _jsxFileName = \"/home/incs_11/Desktop/java/react/my-ecommerce/src/component/UserUpdateComponent.jsx\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport UserService from \"../service/UserService\";\nimport { Formik, Form, Field } from \"formik\";\n\nclass UserUpdateComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.retriverUser = this.retriverUser.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.state = {\n      id: this.props.match.params.id,\n      firstName: '',\n      lastName: '',\n      phoneNo: '',\n      email: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.id == -1) return;\n    this.retriverUser(this.state.id);\n  }\n\n  retriverUser(id) {\n    return UserService.retrieveUser(id).then(response => {\n      this.setState({\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        phoneNo: response.data.phoneNo,\n        email: response.data.email\n      });\n    });\n  }\n\n  onSubmit(values) {\n    console.log(values);\n  } // validate(values)\n  // {\n  // let errors = {} \n  // if(!values.firstName)\n  // errors.firstName = \"Enter the name is must\" \n  // return errors;\n  // }\n\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.id) {\n      errors.id = 'Enter a Description';\n      return errors;\n    }\n\n    render();\n    {\n      let {\n        firstName,\n        lastName,\n        phoneNo,\n        email,\n        id\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \" User \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          id,\n          firstName,\n          lastName,\n          phoneNo,\n          email\n        },\n        onSubmit: this.onSubmit,\n        validate: this.validate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, props => /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 45\n        }\n      }, \"Id\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"id\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 45\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"firstName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 45\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"lastName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 45\n        }\n      }, \"Phone No\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"phoneNo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 2\n        }\n      }, \"Save\"))))));\n    }\n  }\n\n} //     render()\n//     {\n//         let { firstName , lastName , phoneNo , email } = this.state ;\n//        return(\n//            <div className=\"container\">\n//                 <table>\n//                 <thead>\n//                     <tr>\n//                     <th>First Name</th>\n// <th>Last Name</th>\n// <th>Phone No</th>\n// <th>Email</th>\n//                         </tr>                    \n//                 </thead>\n//             <tbody>\n//             <tr>\n//        {/* <td>{this.state.firstName}</td>\n// <td>{this.state.lastName}</td>\n// <td>{this.state.phoneNo}</td>\n// <td>{this.state.email}</td> */}\n//               <td>{firstName}</td>\n// <td>{lastName}</td>\n// <td>{phoneNo}</td>\n// <td>{email}</td>\n//                         </tr>                    \n//             </tbody>\n//                 </table>\n//            </div>\n//        )     \n//     }\n// }\n\n\nexport default UserUpdateComponent;","map":{"version":3,"sources":["/home/incs_11/Desktop/java/react/my-ecommerce/src/component/UserUpdateComponent.jsx"],"names":["Component","React","UserService","Formik","Form","Field","UserUpdateComponent","constructor","props","retriverUser","bind","onSubmit","validate","state","id","match","params","firstName","lastName","phoneNo","email","componentDidMount","retrieveUser","then","response","setState","data","values","console","log","errors","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport React from 'react' ;\nimport UserService from \"../service/UserService\";\nimport { Formik, Form, Field } from \"formik\";\n\n\nclass UserUpdateComponent extends Component\n{\n\n    constructor(props)\n    {\n        super(props)\n        this.retriverUser = this.retriverUser.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validate = this.validate.bind(this)\n        this.state = {\n            id : this.props.match.params.id ,\n            firstName : '' ,\n            lastName : '' ,\n            phoneNo : '' ,\n            email : '' \n        }\n    }\n\n\ncomponentDidMount()\n{\n\n    if(this.state.id == -1)\n        return\n\n    this.retriverUser(this.state.id);\n}\n\nretriverUser(id)\n{\n    return UserService.retrieveUser(id).then(\n        response => {\n            this.setState( {\n                firstName :  response.data.firstName ,\n                lastName : response.data.lastName ,\n                phoneNo : response.data.phoneNo ,\n                email : response.data.email \n            } )\n        }\n\n    )\n\n}\n\nonSubmit(values)\n{\nconsole.log(values);\n\n}\n\n// validate(values)\n// {\n// let errors = {} \n// if(!values.firstName)\n// errors.firstName = \"Enter the name is must\" \n// return errors;\n// }\n\nvalidate(values) {\n    let errors = {}\n    if (!values.id) {\n        errors.id = 'Enter a Description'\n    \n\n    return errors\n}\n\n\n\n\nrender()\n{\n    let { firstName , lastName , phoneNo , email , id} = this.state ;\n\n    return(\n        <div>\n            <div>\n                <h3> User </h3>\n                <div className = \"container\" > \n\n                <Formik\n                    initialValues={{ id , firstName , lastName , phoneNo , email}}\n                    onSubmit={this.onSubmit}  \n                    validate = {this.validate}\n                >\n                    {\n                        (props) => (\n                            <Form>\n                                   <fieldset className=\"form-group\">\n                                            <label>Id</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"id\" disabled />\n                                            \n                                    </fieldset>\n\n                                    <fieldset className=\"form-group\" >\n                                            <label>First Name</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"firstName\"  /> \n                                    </fieldset>\n                                    <fieldset className=\"form-group\" >\n                                            <label>Last Name</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"lastName\"/> \n                                    </fieldset>\n                                    <fieldset className=\"form-group\" >\n                                            <label>Phone No</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"phoneNo\" />  \n                                    </fieldset>\n                                    <fieldset className=\"form-group\" >\n                                            <label>Email</label>\n                                            <Field className = \"form-control\" type=\"text\" name =\"email\"  /> \n                                    </fieldset>                                 \n\n\n\n\n                                 \n <button className=\"btn btn-success\" type=\"submit\">Save</button>\n\n                            </Form>\n                        )   \n                    }   \n                </Formik>\n\n\n\n\n\n\n                {/* <Formik\n                    initialValues={{ id }}\n                >\n                    {\n                        (props) => (\n                            <Form>\n                                <fieldset className=\"form-group\">\n                                    <label>Id</label>\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <label>Email</label>\n                                    <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                </fieldset>\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                            </Form>\n                        )\n                    }\n                </Formik>               */}\n                </div>\n            </div>\n\n        </div>\n    )\n\n\n}\n\n\n}}\n\n\n\n\n\n\n\n//     render()\n//     {\n\n//         let { firstName , lastName , phoneNo , email } = this.state ;\n\n//        return(\n//            <div className=\"container\">\n                \n\n//                 <table>\n//                 <thead>\n//                     <tr>\n//                     <th>First Name</th>\n// <th>Last Name</th>\n// <th>Phone No</th>\n// <th>Email</th>\n//                         </tr>                    \n\n\n//                 </thead>\n\n//             <tbody>\n\n//             <tr>\n\n\n\n//        {/* <td>{this.state.firstName}</td>\n// <td>{this.state.lastName}</td>\n// <td>{this.state.phoneNo}</td>\n// <td>{this.state.email}</td> */}\n              \n//               <td>{firstName}</td>\n// <td>{lastName}</td>\n// <td>{phoneNo}</td>\n// <td>{email}</td>\n\n\n\n//                         </tr>                    \n\n\n\n//             </tbody>\n//                 </table>\n\n\n\n//            </div>\n//        )     \n\n//     }\n\n\n// }\n\nexport default UserUpdateComponent ;"]},"metadata":{},"sourceType":"module"}